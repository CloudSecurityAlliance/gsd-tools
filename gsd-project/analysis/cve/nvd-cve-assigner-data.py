#!/usr/bin/env python3

# Reminder: loading all the files into json takes 30 seconds or so

import os
import json
import pprint

# download files true or false
download_files=False



file_year_list=["2002", "2003", "2004", "2005", "2006", "2007", "2008", "2009", "2010", "2011", "2012", "2013", "2014", "2015", "2016", "2017", "2018", "2019", "2020", "2021", "2022"]

# Ignore 2022 for now.
data_year_list=["1999", "2000", "2001", "2002", "2003", "2004", "2005", "2006", "2007", "2008", "2009", "2010", "2011", "2012", "2013", "2014", "2015", "2016", "2017", "2018", "2019", "2020", "2021"]

file_year_data=[]

for year in file_year_list:
    file="nvdcve-1.1-" + str(year) + ".json"
    url="https://nvd.nist.gov/feeds/json/cve/1.1/" + file + ".gz"
    if download_files == True:
        os.system("wget -q " + url)
        os.system("gzip -d " + file + ".gz")

    file_handle = open(file)
    json_data = json.load(file_handle)
    for CVE_Items in json_data["CVE_Items"]:
        assigner = CVE_Items["cve"]["CVE_data_meta"]["ASSIGNER"]
        cve_id = CVE_Items["cve"]["CVE_data_meta"]["ID"]
        publishedDate = CVE_Items["publishedDate"]
        # use logic to assign assigned year (CVEID YEAR if > published date year)
        print(assigner + "," + cve_id + "," + publishedDate)
        # create an array with assigner ID's. then create sub arrays of data_year_list (1999 to now), set to 0 by default, set how many ID's assigned (count+1)
        # Then analyze the array and add:
        # first_year_seen (first non 0 year)
        # last_year_seen (last non 0 year)
        # lifespan (years in between last_year_seen and first_year_seen)
        # years_since_last_id (many are dead in 2020 and later)
        # cve_assigned_0 (any 0 years between first_year_seen and last_year_seen)
        # cve_assigned_min lowest non 0 year
        # cve_assigned_max higest year
        # cve_assigned_average (so total count divided by lifespan)
        # cve_assigned_last_year (last year #)
